name: Django CI and Formatting

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.12"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache Python packages
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt --no-cache-dir

  test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt --no-cache-dir
    - name: Create dummy .env file
      run: |
        echo "TMDB_API_URL=https://api.themoviedb.org/3" > .env
        echo "TMDB_API_KEY=dummy_tmdb_key" >> .env
        echo "YOUTUBE_API_KEY=dummy_youtube_key" >> .env
    - name: Apply Migrations
      run: python manage.py migrate
    - name: Run Tests
      run: python manage.py test --verbosity=2
      env:
        TMDB_API_URL: ${{ secrets.TMDB_API_URL }}
        TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
        YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}

  format:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black
    - name: Check code formatting with Black
      run: |
        black --check .