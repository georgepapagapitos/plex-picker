# Generated by Django 5.1.1 on 2024-10-14 23:56

import django.db.models.deletion
import sync.models.mixins
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Studio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'verbose_name': 'Studio',
                'verbose_name_plural': 'Studios',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('optimized_poster', models.ImageField(blank=True, null=True, upload_to='optimized_posters/')),
                ('optimized_art', models.ImageField(blank=True, null=True, upload_to='optimized_art/')),
                ('title', models.CharField(max_length=255)),
                ('summary', models.TextField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('poster_url', models.URLField(blank=True, null=True)),
                ('plex_key', models.CharField(max_length=255, unique=True)),
                ('trailer_url', models.URLField(blank=True, null=True)),
                ('tmdb_id', models.PositiveIntegerField(blank=True, null=True)),
                ('imdb_id', models.CharField(blank=True, max_length=10, null=True, unique=True)),
                ('rotten_tomatoes_rating', models.FloatField(blank=True, null=True)),
                ('content_rating', models.CharField(blank=True, max_length=10, null=True)),
                ('art', models.URLField(blank=True, null=True)),
                ('tagline', models.TextField(blank=True, null=True)),
                ('audience_rating', models.FloatField(blank=True, null=True)),
                ('audience_rating_image', models.CharField(blank=True, max_length=255, null=True)),
                ('chapter_source', models.CharField(blank=True, max_length=50, null=True)),
                ('edition_title', models.CharField(blank=True, max_length=255, null=True)),
                ('original_title', models.CharField(blank=True, max_length=255, null=True)),
                ('originally_available_at', models.DateField(blank=True, null=True)),
                ('rating_image', models.CharField(blank=True, max_length=255, null=True)),
                ('view_count', models.IntegerField(default=0)),
                ('tmdb_url', models.URLField(blank=True, null=True)),
                ('trakt_url', models.URLField(blank=True, null=True)),
                ('imdb_url', models.URLField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('last_viewed_at', models.DateTimeField(blank=True, null=True)),
                ('guid', models.CharField(blank=True, max_length=255, null=True)),
                ('use_original_title', models.IntegerField(default=-1)),
                ('enable_credits_marker_generation', models.IntegerField(default=-1)),
                ('genres', models.ManyToManyField(related_name='movies', to='sync.genre')),
                ('studio', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='movies', to='sync.studio')),
            ],
            options={
                'verbose_name': 'Movie',
                'verbose_name_plural': 'Movies',
                'ordering': ['title'],
            },
            bases=(sync.models.mixins.FormattedActorsMixin, sync.models.mixins.FormattedDurationMixin, sync.models.mixins.FormattedGenresMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('photo_url', models.URLField(blank=True, null=True)),
                ('tmdb_id', models.PositiveIntegerField(blank=True, null=True, unique=True)),
                ('imdb_id', models.CharField(blank=True, max_length=9, null=True, unique=True)),
                ('tvdb_id', models.PositiveIntegerField(blank=True, null=True, unique=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('death_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
                'indexes': [models.Index(fields=['last_name', 'first_name'], name='sync_person_last_na_448009_idx'), models.Index(fields=['tmdb_id'], name='sync_person_tmdb_id_36bf37_idx'), models.Index(fields=['imdb_id'], name='sync_person_imdb_id_aca8d8_idx'), models.Index(fields=['tvdb_id'], name='sync_person_tvdb_id_2639c0_idx')],
            },
        ),
        migrations.CreateModel(
            name='Show',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('optimized_poster', models.ImageField(blank=True, null=True, upload_to='optimized_posters/')),
                ('optimized_art', models.ImageField(blank=True, null=True, upload_to='optimized_art/')),
                ('title', models.CharField(max_length=255)),
                ('summary', models.TextField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('poster_url', models.URLField(blank=True, null=True)),
                ('plex_key', models.CharField(max_length=255, unique=True)),
                ('tmdb_id', models.PositiveIntegerField(blank=True, null=True)),
                ('rotten_tomatoes_rating', models.FloatField(blank=True, null=True)),
                ('content_rating', models.CharField(blank=True, max_length=10, null=True)),
                ('art', models.URLField(blank=True, null=True)),
                ('trailer_url', models.URLField(blank=True, null=True)),
                ('tagline', models.TextField(blank=True, null=True)),
                ('audience_rating', models.FloatField(blank=True, null=True)),
                ('audience_rating_image', models.CharField(blank=True, max_length=255, null=True)),
                ('originally_available_at', models.DateField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('last_viewed_at', models.DateTimeField(blank=True, null=True)),
                ('guid', models.CharField(blank=True, max_length=255, null=True)),
                ('episode_sort', models.IntegerField(default=-1)),
                ('flatten_seasons', models.IntegerField(default=-1)),
                ('season_count', models.IntegerField(default=0)),
                ('episode_count', models.IntegerField(default=0)),
                ('view_count', models.IntegerField(default=0)),
                ('use_original_title', models.IntegerField(default=-1)),
                ('enable_credits_marker_generation', models.IntegerField(default=-1)),
                ('genres', models.ManyToManyField(related_name='shows', to='sync.genre')),
                ('studio', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shows', to='sync.studio')),
            ],
            options={
                'verbose_name': 'Show',
                'verbose_name_plural': 'Shows',
                'ordering': ['title'],
            },
            bases=(sync.models.mixins.FormattedActorsMixin, sync.models.mixins.FormattedDurationMixin, sync.models.mixins.FormattedGenresMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('summary', models.TextField(blank=True, null=True)),
                ('season_number', models.IntegerField()),
                ('episode_number', models.IntegerField()),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('plex_key', models.IntegerField(unique=True)),
                ('tmdb_id', models.IntegerField(blank=True, null=True)),
                ('rotten_tomatoes_rating', models.FloatField(blank=True, null=True)),
                ('audience_rating', models.FloatField(blank=True, null=True)),
                ('audience_rating_image', models.CharField(blank=True, max_length=255, null=True)),
                ('originally_available_at', models.DateField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('last_viewed_at', models.DateTimeField(blank=True, null=True)),
                ('guid', models.CharField(blank=True, max_length=255, null=True)),
                ('absolute_index', models.IntegerField(blank=True, null=True)),
                ('view_count', models.IntegerField(default=0)),
                ('has_commercial_marker', models.BooleanField(default=False)),
                ('has_intro_marker', models.BooleanField(default=False)),
                ('has_credits_marker', models.BooleanField(default=False)),
                ('show', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='episodes', to='sync.show')),
            ],
            options={
                'ordering': ['show', 'season_number', 'episode_number'],
                'unique_together': {('show', 'season_number', 'episode_number')},
            },
            bases=(sync.models.mixins.FormattedActorsMixin, sync.models.mixins.FormattedDurationMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_type', models.CharField(choices=[('ACTOR', 'Actor'), ('DIRECTOR', 'Director'), ('PRODUCER', 'Producer'), ('WRITER', 'Writer'), ('CINEMATOGRAPHER', 'Cinematographer'), ('COMPOSER', 'Composer'), ('EDITOR', 'Editor'), ('OTHER', 'Other')], max_length=20)),
                ('character_name', models.CharField(blank=True, max_length=255, null=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('episode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='sync.episode')),
                ('movie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='sync.movie')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='sync.person')),
                ('show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='sync.show')),
            ],
            options={
                'ordering': ['order', 'id'],
                'indexes': [models.Index(fields=['role_type'], name='sync_role_role_ty_275f5c_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='show',
            index=models.Index(fields=['year'], name='sync_show_year_8f0bed_idx'),
        ),
        migrations.AddIndex(
            model_name='show',
            index=models.Index(fields=['tmdb_id'], name='sync_show_tmdb_id_102fcb_idx'),
        ),
        migrations.AddIndex(
            model_name='movie',
            index=models.Index(fields=['year'], name='sync_movie_year_6a90d9_idx'),
        ),
        migrations.AddIndex(
            model_name='movie',
            index=models.Index(fields=['tmdb_id'], name='sync_movie_tmdb_id_6b4b5f_idx'),
        ),
        migrations.AddIndex(
            model_name='movie',
            index=models.Index(fields=['imdb_id'], name='sync_movie_imdb_id_564723_idx'),
        ),
    ]
