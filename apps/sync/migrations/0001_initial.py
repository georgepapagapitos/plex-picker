# Generated by Django 5.1.1 on 2024-09-26 11:58

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Genre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Movie",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("summary", models.TextField(blank=True, null=True)),
                ("year", models.IntegerField(blank=True, null=True)),
                ("duration", models.IntegerField(blank=True, null=True)),
                ("poster_url", models.URLField(blank=True, null=True)),
                ("plex_key", models.CharField(max_length=255, unique=True)),
                ("trailer_url", models.URLField(blank=True, null=True)),
                ("tmdb_id", models.PositiveIntegerField(blank=True, null=True)),
                ("rotten_tomatoes_rating", models.FloatField(blank=True, null=True)),
                (
                    "genres",
                    models.ManyToManyField(related_name="movies", to="sync.genre"),
                ),
            ],
            options={
                "verbose_name": "Movie",
                "verbose_name_plural": "Movies",
                "ordering": ["title"],
            },
        ),
        migrations.CreateModel(
            name="Show",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("summary", models.TextField(blank=True, null=True)),
                ("year", models.IntegerField(blank=True, null=True)),
                ("duration", models.IntegerField(blank=True, null=True)),
                ("poster_url", models.URLField(blank=True, null=True)),
                ("plex_key", models.CharField(max_length=255, unique=True)),
                ("tmdb_id", models.PositiveIntegerField(blank=True, null=True)),
                ("rotten_tomatoes_rating", models.FloatField(blank=True, null=True)),
                (
                    "genres",
                    models.ManyToManyField(related_name="shows", to="sync.genre"),
                ),
            ],
            options={
                "verbose_name": "Show",
                "verbose_name_plural": "Shows",
                "ordering": ["title"],
            },
        ),
        migrations.CreateModel(
            name="Episode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("summary", models.TextField(blank=True, null=True)),
                ("season_number", models.IntegerField()),
                ("episode_number", models.IntegerField()),
                ("duration", models.IntegerField(blank=True, null=True)),
                ("plex_key", models.IntegerField(unique=True)),
                ("tmdb_id", models.IntegerField(blank=True, null=True)),
                ("rotten_tomatoes_rating", models.FloatField(blank=True, null=True)),
                (
                    "show",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="episodes",
                        to="sync.show",
                    ),
                ),
            ],
            options={
                "ordering": ["show", "season_number", "episode_number"],
            },
        ),
        migrations.CreateModel(
            name="Actor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=255)),
                ("last_name", models.CharField(max_length=255)),
                ("photo_url", models.URLField(blank=True, null=True)),
                (
                    "tmdb_id",
                    models.PositiveIntegerField(blank=True, null=True, unique=True),
                ),
                (
                    "movies",
                    models.ManyToManyField(
                        blank=True, related_name="actors", to="sync.movie"
                    ),
                ),
                (
                    "shows",
                    models.ManyToManyField(
                        blank=True, related_name="actors", to="sync.show"
                    ),
                ),
            ],
            options={
                "ordering": ["last_name", "first_name"],
            },
        ),
        migrations.AddIndex(
            model_name="movie",
            index=models.Index(fields=["year"], name="sync_movie_year_6a90d9_idx"),
        ),
        migrations.AddIndex(
            model_name="movie",
            index=models.Index(
                fields=["tmdb_id"], name="sync_movie_tmdb_id_6b4b5f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="show",
            index=models.Index(fields=["year"], name="sync_show_year_8f0bed_idx"),
        ),
        migrations.AddIndex(
            model_name="show",
            index=models.Index(fields=["tmdb_id"], name="sync_show_tmdb_id_102fcb_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="episode",
            unique_together={("show", "season_number", "episode_number")},
        ),
        migrations.AddIndex(
            model_name="actor",
            index=models.Index(
                fields=["last_name", "first_name"], name="sync_actor_last_na_8a7263_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="actor",
            index=models.Index(
                fields=["tmdb_id"], name="sync_actor_tmdb_id_f4d371_idx"
            ),
        ),
    ]
